from sepaxml import SepaDD
import datetime, uuid

class Sepa:
    def __init__(self, name, iban, bic, creditorId):
        self._config = {
            "name": name,
            "IBAN": ''.join(iban.split()),
            "BIC": bic,
            "batch": True,
            "creditor_id": creditorId,  # supplied by your bank or financial authority
            "currency": "EUR",  # ISO 4217
            # "instrument": "B2B"  # - default is CORE (B2C)
        }
        self._sepa = SepaDD(self._config, schema="pain.008.001.02", clean=True)

    def add_member(self, member, amountEur, mandat, collectionDate, verwendungszweck) -> bool:
        payment = {
            "name": member.kontoverbindung.kontoinhaber,
            "IBAN": member.kontoverbindung.iban,
            "BIC": member.kontoverbindung.bic,
            "amount": int(amountEur*100),  # in cents
            "type": "RCUR",  # FRST,RCUR,OOFF,FNAL
            "collection_date": datetime.datetime.strptime(collectionDate, '%d.%m.%Y'),
            "mandate_id": mandat.mandatsreferenz,
            "mandate_date": datetime.datetime.strptime(mandat.mandatsdatum, '%d.%m.%Y'),
            "description": verwendungszweck,
            # "endtoend_id": str(uuid.uuid1())  # autogenerated if obmitted
        }
        b = self._sepa.check_payment(payment)
        #if b is True:
            #self._sepa.add_payment(payment)
        return b

    def export(self, filePath):
        with open(filePath, "w") as text_file:
            text_file.write(self._sepa.export(validate=True))

    def check_config(self) -> bool:
        return self._sepa.check_config(self._config)